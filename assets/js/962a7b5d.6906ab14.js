"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9945],{9705:function(e,t,n){n.d(t,{m:function(){return r},v:function(){return l}});var a=n(7294),i=n(2004);function l(e){var t=e.children;return a.createElement("div",{className:"runnable-command"},t)}function r(e){var t=e.url;return a.createElement(i.Z,{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:t})}},7548:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var a=n(3117),i=n(102),l=(n(7294),n(3905)),r=n(9705),s=["components"],o={title:"Publish",sidebar_position:20},p=void 0,d={unversionedId:"commands/publishing/publish",id:"commands/publishing/publish",title:"Publish",description:"The publish sub-command allows to publish Scala CLI projects to Maven repositories.",source:"@site/docs/commands/publishing/publish.md",sourceDirName:"commands/publishing",slug:"/commands/publishing/publish",permalink:"/scala-cli/docs/commands/publishing/publish",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/publishing/publish.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Publish",sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Publish Setup",permalink:"/scala-cli/docs/commands/publishing/publish-setup"},next:{title:"Publish Local",permalink:"/scala-cli/docs/commands/publishing/publish-local"}},u={},m=[{value:"Required settings",id:"required-settings",level:2},{value:"Organization",id:"organization",level:3},{value:"Name",id:"name",level:3},{value:"Version",id:"version",level:3},{value:"Repository settings",id:"repository-settings",level:2},{value:"Other settings",id:"other-settings",level:2},{value:"Signing",id:"signing",level:3},{value:"Bouncy Castle",id:"bouncy-castle",level:4},{value:"GPG",id:"gpg",level:4},{value:"Checksums",id:"checksums",level:3},{value:"CI overrides",id:"ci-overrides",level:3},{value:"Repositories",id:"repositories",level:2},{value:"Maven Central",id:"maven-central",level:3},{value:"GitHub Packages",id:"github-packages",level:3},{value:"Ivy2 Local",id:"ivy2-local",level:3},{value:"Other pre-defined repositories",id:"other-pre-defined-repositories",level:3},{value:"Generic Maven repositories",id:"generic-maven-repositories",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Publishing",id:"publishing",level:2}],c={toc:m};function k(e){var t=e.components,n=(0,i.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"publish")," sub-command allows to publish Scala CLI projects to Maven repositories."),(0,l.kt)("p",null,"We recommend running ",(0,l.kt)("a",{parentName:"p",href:"/scala-cli/docs/commands/publishing/publish-setup"},"the ",(0,l.kt)("inlineCode",{parentName:"a"},"publish setup")," sub-command")," once prior to\nrunning ",(0,l.kt)("inlineCode",{parentName:"p"},"publish"),", in order to set missing ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directives for publishing, but this is not\nmandatory."),(0,l.kt)("h2",{id:"required-settings"},"Required settings"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"scala-cli publish")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"scala-cli publish local")," might complain about missing settings.\nAn organization, a name (or a module name), and (a way to compute) a version are needed, but Scala CLI may\nbe able to compute sensible defaults for them."),(0,l.kt)("p",null,"We recommend setting the settings below via using directives rather than on the command-line,\nso that commands such as ",(0,l.kt)("inlineCode",{parentName:"p"},"scala publish .")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"scala publish local .")," work fine for your\nproject. Command-line options for those settings take over the using directive values, and are\nprovided as a convenience."),(0,l.kt)("p",null,"This table lists settings allowing to specify those. See the sub-sections right after for more details."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"using")," directive"),(0,l.kt)("th",{parentName:"tr",align:null},"Command-line option"),(0,l.kt)("th",{parentName:"tr",align:null},"Example values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Organization"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.organization")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--organization")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"org.virtuslab.scala-cli")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"scala-cli")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Module Name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.moduleName")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--module-name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"scala-cli_3")),(0,l.kt)("td",{parentName:"tr",align:null},"Module Name includes the Scala prefix, such as ",(0,l.kt)("inlineCode",{parentName:"td"},"_2.13")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"_3"),". Specifying Name should be favored over Module Name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Compute Version"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.computeVersion")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--compute-version")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"git:tag")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Version"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.version")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--version")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0.1.0"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"0.1.1-SNAPSHOT")),(0,l.kt)("td",{parentName:"tr",align:null},"As much as possible, Compute Version (describing how to compute the version) should be favored over Version")))),(0,l.kt)("h3",{id:"organization"},"Organization"),(0,l.kt)("p",null,"If your Scala CLI project lives in a git repository having a GitHub remote, Scala CLI\nwill infer an organization from it: if your project lives in GitHub organization ",(0,l.kt)("inlineCode",{parentName:"p"},"foo"),"\n(that is, lives somewhere under ",(0,l.kt)("inlineCode",{parentName:"p"},"https://github.com/foo/"),"), Scala CLI will use\n",(0,l.kt)("inlineCode",{parentName:"p"},"io.github.foo")," as default Maven organization."),(0,l.kt)("p",null,"To override this default value, set the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish.organization")," directive, like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'//> using publish.organization "io.github.foo"\n')),(0,l.kt)("h3",{id:"name"},"Name"),(0,l.kt)("p",null,"Scala CLI will use the project directory name as default Maven name. That is, if your\nScala CLI project lives in a directory named ",(0,l.kt)("inlineCode",{parentName:"p"},"something"),", it will be published as\n",(0,l.kt)("inlineCode",{parentName:"p"},"something")," (pure Java project) or ",(0,l.kt)("inlineCode",{parentName:"p"},"something_3")," (Scala 3 project) for example."),(0,l.kt)("p",null,"To override this default value, set the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish.name")," directive, like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'//> using publish.name "something"\n')),(0,l.kt)("h3",{id:"version"},"Version"),(0,l.kt)("p",null,"If your Scala CLI project lives in a git repository, Scala CLI will infer a way to compute\nversions from it: if the current commit has a tag ",(0,l.kt)("inlineCode",{parentName:"p"},"v1.2.3"),", version ",(0,l.kt)("inlineCode",{parentName:"p"},"1.2.3")," is assumed.\nElse, if it has such a tag earlier in the git history, version ",(0,l.kt)("inlineCode",{parentName:"p"},"1.2.4-SNAPSHOT")," is assumed."),(0,l.kt)("p",null,"To override this default value, set the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish.computeVersion")," directive, like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'//> using publish.computeVersion "git:tag"\n')),(0,l.kt)("h2",{id:"repository-settings"},"Repository settings"),(0,l.kt)("p",null,"A repository is required for the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish")," command, and might need other settings to work fine\n(to pass credentials for example)."),(0,l.kt)("p",null,"When publishing from you CI, we recommend letting ",(0,l.kt)("inlineCode",{parentName:"p"},"scala-cli publish setup"),"\nsetting those settings via using directives. When publishing from your local machine to Maven Central,\nwe recommend setting the repository via a ",(0,l.kt)("inlineCode",{parentName:"p"},"publish.repository")," directive, and keeping your\nSonatype credentials in the Scala CLI settings, via commands such as"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SONATYPE_USER=\u2026 scala-cli config sonatype.user env:SONATYPE_USER --password-value\nSONATYPE_PASSWORD=\u2026 scala-cli config sonatype.password env:SONATYPE_PASSWORD\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"using")," directive"),(0,l.kt)("th",{parentName:"tr",align:null},"Command-line option"),(0,l.kt)("th",{parentName:"tr",align:null},"Example values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.repository")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--publish-repository")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"central"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"central-s01"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"github"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"https://artifacts.company.com/maven")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository User"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.user")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--user")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"env:SONATYPE_USER")),(0,l.kt)("td",{parentName:"tr",align:null},"Password value format")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository Password"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.password")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--password")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"env:SONATYPE_PASSWORD")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository Realm"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.realm")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--realm")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"other-settings"},"Other settings"),(0,l.kt)("p",null,"A number of metadata can be set either by ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directives, or from the command-line. These\nmetadata are optional in the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish local")," command, but might be mandatory for some repositories\nin the ",(0,l.kt)("inlineCode",{parentName:"p"},"publish")," command, like Maven Central for non-snapshot versions."),(0,l.kt)("p",null,"We recommend setting the settings below via using directives rather than on the command-line,\nso that these don't have to be recalled for each ",(0,l.kt)("inlineCode",{parentName:"p"},"scala-cli publish")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"scala-cli publish local"),"\ninvocation. Command-line options for those settings take over the using directive values, and are\nprovided as a convenience."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"using")," directive"),(0,l.kt)("th",{parentName:"tr",align:null},"Command-line option"),(0,l.kt)("th",{parentName:"tr",align:null},"Example values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"License"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.license")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--license")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Apache-2.0"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"MIT"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Foo:https://foo.com/license.txt"),", \u2026"),(0,l.kt)("td",{parentName:"tr",align:null},"Run ",(0,l.kt)("inlineCode",{parentName:"td"},"scala-cli publish --license list")," to list pre-defined licenses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"URL"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.url")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--url")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VCS"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.vcs")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--vcs")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"github:VirtusLab/scala-cli"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"https://github.com/VirtusLab/scala-cli.git")),(0,l.kt)("td",{parentName:"tr",align:null},"scm:git:github.com/VirtusLab/scala-cli.git")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Developers"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.developer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--developer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"alexme","|","Alex Me","|",(0,l.kt)("a",{parentName:"td",href:"https://alex.me"},"https://alex.me"))),(0,l.kt)("td",{parentName:"tr",align:null},"Can be specified multiple times, using directives and CLI values add up")))),(0,l.kt)("h3",{id:"signing"},"Signing"),(0,l.kt)("p",null,"Scala CLI can sign the artifacts it publishes with PGP signatures. Signing in Scala CLI can be\nhandled by either"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("a",{parentName:"li",href:"https://www.bouncycastle.org"},"Bouncy Castle library")," (default, recommended)"),(0,l.kt)("li",{parentName:"ul"},"the local ",(0,l.kt)("inlineCode",{parentName:"li"},"gpg")," binary on your machine")),(0,l.kt)("h4",{id:"bouncy-castle"},"Bouncy Castle"),(0,l.kt)("p",null,"A benefit of using Bouncy Castle to sign artifacts is that it has no external dependencies.\nScala CLI is able to sign things with Bouncy Castle without further setup on your side."),(0,l.kt)("p",null,"To enable signing with Bouncy Castle (recommended), pass a secret key with\n",(0,l.kt)("inlineCode",{parentName:"p"},"--secret-key file:/path/to/secret-key"),". If the key is protected by a password,\npass it like ",(0,l.kt)("inlineCode",{parentName:"p"},"--secret-key-password env:MY_KEY_PASSWORD"),"."),(0,l.kt)("p",null,"Scala CLI can generate and keep a secret key for you. For that, create the key with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"scala-cli config --create-key\n")),(0,l.kt)("p",null,"You can then ask publish to use the key kept in the Scala CLI config with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"scala-cli publish \\\n  --secret-key config:pgp.secret-key \\\n  --secret-key-password config:pgp.secret-key-password \\\n  \u2026\n")),(0,l.kt)("h4",{id:"gpg"},"GPG"),(0,l.kt)("p",null,"Using GPG to sign artifacts requires the ",(0,l.kt)("inlineCode",{parentName:"p"},"gpg")," binary to be installed on your system.\nA benefit of using ",(0,l.kt)("inlineCode",{parentName:"p"},"gpg")," to sign artifacts over Bouncy Castle is: you can use keys from\nyour GPG key ring, or from external devices that GPG may support."),(0,l.kt)("p",null,"To enable signing with GPG, pass ",(0,l.kt)("inlineCode",{parentName:"p"},"--gpg-key *key_id*")," on the command line. If needed,\nyou can specify arguments meant to be passed to ",(0,l.kt)("inlineCode",{parentName:"p"},"gpg"),", with ",(0,l.kt)("inlineCode",{parentName:"p"},"--gpg-option"),", like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"--gpg-key 1234567890ABCDEF --gpg-option --foo --gpg-option --bar\n")),(0,l.kt)("h3",{id:"checksums"},"Checksums"),(0,l.kt)("p",null,"Scala CLI can generate checksums of the artifacts it publishes."),(0,l.kt)("p",null,"By default, Scala CLI generates SHA-1 and MD5 checksums. To disable checksums,\npass ",(0,l.kt)("inlineCode",{parentName:"p"},"--checksum none"),". To generate checksum formats to generate, pass them via\n",(0,l.kt)("inlineCode",{parentName:"p"},"--checksum"),", separating the checksum values with ",(0,l.kt)("inlineCode",{parentName:"p"},",")," or using ",(0,l.kt)("inlineCode",{parentName:"p"},"--checksum")," multiple\ntimes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"--checksum sha1,md5\n--checksum sha1 --checksum md5\n")),(0,l.kt)("p",null,"To list supported checksum types, pass ",(0,l.kt)("inlineCode",{parentName:"p"},"--checksum list"),"."),(0,l.kt)("h3",{id:"ci-overrides"},"CI overrides"),(0,l.kt)("p",null,"Scala CLI allows some publishing-related settings to have different values on your local machine and\non CIs. In particular, this can be convenient to handle credentials and signing parameters, as these can\nbe read from different locations on developers' machines and on CIs."),(0,l.kt)("p",null,"On CIs (when ",(0,l.kt)("inlineCode",{parentName:"p"},"CI")," is set in the environment, whatever its value), the CI override is\nused if it's there. Else the main directive is used."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Settings"),(0,l.kt)("th",{parentName:"tr",align:null},"Directive"),(0,l.kt)("th",{parentName:"tr",align:null},"CI override directive"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Compute Version"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.computeVersion")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.computeVersion"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.repository")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.repository"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository User"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.user")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.user"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository Password"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.password")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.password"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Repository Realm"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.realm")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.realm"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Secret Key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.secretKey")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.secretKey"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Secret Key Password"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.secretKeyPassword")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.secretKeyPassword"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GPG key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.gpgKey")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.gpgKey"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GPG options"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.gpgOptions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"publish.ci.gpgOptions"))))),(0,l.kt)("h2",{id:"repositories"},"Repositories"),(0,l.kt)("h3",{id:"maven-central"},"Maven Central"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"central")," as repository to push artifacts to Maven Central via ",(0,l.kt)("inlineCode",{parentName:"p"},"oss.sonatype.org"),".\nTo push to it via ",(0,l.kt)("inlineCode",{parentName:"p"},"s01.oss.sonatype.org")," (the default for newly created repositories),\nuse ",(0,l.kt)("inlineCode",{parentName:"p"},"central-s01"),"."),(0,l.kt)("p",null,"When using ",(0,l.kt)("inlineCode",{parentName:"p"},"central")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"central-s01")," as repository, artifacts are pushed\neither to ",(0,l.kt)("inlineCode",{parentName:"p"},"https://oss.sonatype.org/content/repositories/snapshots")," (versions\nending in ",(0,l.kt)("inlineCode",{parentName:"p"},"SNAPSHOT"),") or to ",(0,l.kt)("inlineCode",{parentName:"p"},"https://oss.sonatype.org/staging/deploy/maven2"),'\n(in that case, Sonatype API endpoints are called to "close" and "release"\nartifacts, which later syncs them to ',(0,l.kt)("inlineCode",{parentName:"p"},"https://repo1.maven.org/maven2"),")."),(0,l.kt)("h3",{id:"github-packages"},"GitHub Packages"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"github")," (GitHub organization and name computed from the git remotes)\nor ",(0,l.kt)("inlineCode",{parentName:"p"},"github:org/name")," (replace ",(0,l.kt)("inlineCode",{parentName:"p"},"org")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," by the GitHub organization and name\nof your repository, like ",(0,l.kt)("inlineCode",{parentName:"p"},"github:VirtusLab/scala-cli"),")\nto push artifacts to GitHub Packages."),(0,l.kt)("p",null,"Note that, as of writing this, this disables parallel uploading of artifacts,\nchecksums, and signing (all not supported by GitHub Packages as of writing this)."),(0,l.kt)("h3",{id:"ivy2-local"},"Ivy2 Local"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"ivy2Local")," to put artifacts in the local Ivy2 repository, just like how\n",(0,l.kt)("a",{parentName:"p",href:"/scala-cli/docs/commands/publishing/publish-local"},(0,l.kt)("inlineCode",{parentName:"a"},"publish local"))," does."),(0,l.kt)("h3",{id:"other-pre-defined-repositories"},"Other pre-defined repositories"),(0,l.kt)("p",null,"All pre-defined repositories accepted by coursier, such as ",(0,l.kt)("inlineCode",{parentName:"p"},"jitpack")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"sonatype:snapshots"),", are accepted as repositories for publishing."),(0,l.kt)("h3",{id:"generic-maven-repositories"},"Generic Maven repositories"),(0,l.kt)("p",null,"Pass a URL (beginning with ",(0,l.kt)("inlineCode",{parentName:"p"},"http://")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"https://"),") to push to custom\nHTTP servers. Pushing to such repositories relies on HTTP PUT requests\n(just like for the pre-defined repositories above)."),(0,l.kt)("p",null,"You can also pass a path to a local directory, absolute (recommended)\nor relative (beware of name clashes with pre-defined repositories above)."),(0,l.kt)("h3",{id:"authentication"},"Authentication"),(0,l.kt)("p",null,"Specify publish repository authentication either on the command-line or via\nusing directives. See user / password / realm in the ",(0,l.kt)("a",{parentName:"p",href:"#settings"},"settings table"),"\nand the ",(0,l.kt)("a",{parentName:"p",href:"#ci-overrides"},"CI overrides"),"."),(0,l.kt)("h2",{id:"publishing"},"Publishing"),(0,l.kt)("p",null,"Once all the necessary settings are set, publish a Scala CLI project with a command\nsuch as this one (",(0,l.kt)("inlineCode",{parentName:"p"},".")," is for the Scala CLI project in the current directory):"),(0,l.kt)(r.v,{mdxType:"ChainedSnippets"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"scala-cli publish .\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Publishing io.github.scala-cli:hello-scala-cli_3:0.1.0-SNAPSHOT\n \u2714 Computed 8 checksums\n \ud83d\ude9a Wrote 12 files\n\n \ud83d\udc40 Check results at\n  https://s01.oss.sonatype.org/content/repositories/snapshots/io/github/scala-cli/hello-scala-cli_3/0.1.0-SNAPSHOT\n"))))}k.isMDXComponent=!0}}]);