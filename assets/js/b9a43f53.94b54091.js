"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2585],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2448:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],s={title:"Sharing and testing code with GitHub gists",sidebar_position:6},l=void 0,c={unversionedId:"cookbooks/gists",id:"cookbooks/gists",title:"Sharing and testing code with GitHub gists",description:"Running code from gists",source:"@site/docs/cookbooks/gists.md",sourceDirName:"cookbooks",slug:"/cookbooks/gists",permalink:"/scala-cli/docs/cookbooks/gists",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/cookbooks/gists.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Sharing and testing code with GitHub gists",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Packaging Scala applications as Docker images",permalink:"/scala-cli/docs/cookbooks/scala-docker"},next:{title:"Setup multiple Scala CLI projects in IDEA IntelliJ as separate modules",permalink:"/scala-cli/docs/cookbooks/intellij-multi-bsp"}},p={},u=[{value:"Running code from gists",id:"running-code-from-gists",level:2},{value:"Sharing code snippets",id:"sharing-code-snippets",level:2},{value:"Resources from gists",id:"resources-from-gists",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"running-code-from-gists"},"Running code from gists"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," lets you run Scala code straight from GitHub gists, without the need to manually download them first.\nThis is done by passing the link to a gist as an argument to ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli"),":"),(0,r.kt)("p",null,"For example, given the gist ",(0,r.kt)("inlineCode",{parentName:"p"},"https://gist.github.com/alexarchambault/7b4ec20c4033690dd750ffd601e540ec"),", which contains these two files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Messages.scala",title:"Messages.scala"},'object Messages {\n  def hello = "Hello"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=run.sc",title:"run.sc"},"println(Messages.hello)\n")),(0,r.kt)("p",null,"You can run them with ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli https://gist.github.com/alexarchambault/7b4ec20c4033690dd750ffd601e540ec\n")),(0,r.kt)("p",null,"This example prints ",(0,r.kt)("inlineCode",{parentName:"p"},"Hello")," to the standard output."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"As shown in this example, the gist isn't limited to just one file.\n",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," downloads the gist's archive and unzips it, so the gist can contain multiple files that depend on each other."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," also caches the project sources using Coursier's cache.")),(0,r.kt)("h2",{id:"sharing-code-snippets"},"Sharing code snippets"),(0,r.kt)("p",null,"Together with the GitHub CLI (",(0,r.kt)("inlineCode",{parentName:"p"},"gh"),"), it becomes really easy to share Scala code.\nIf you want to share a code file named ",(0,r.kt)("inlineCode",{parentName:"p"},"file.scala"),", just run this command to create the gist:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gh gist create file.scala\n")),(0,r.kt)("p",null,"Then you (and others) can run it quickly, using the ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," approach shown above."),(0,r.kt)("h2",{id:"resources-from-gists"},"Resources from gists"),(0,r.kt)("p",null,"You can also use resources from gists archive. This is done by passing ",(0,r.kt)("inlineCode",{parentName:"p"},"resourceDir")," in using directives."),(0,r.kt)("p",null,"For example, given the gist ",(0,r.kt)("inlineCode",{parentName:"p"},"https://gist.github.com/lwronski/7ee12fa4b8b8bac3211841273df82080")," which containing Scala code and text file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Hello.scala",title:"Hello.scala"},'//> using resourceDir "./"\nimport scala.io.Source\n\nobject Hello extends App {\n    val inputs = Source.fromResource("input").getLines.map(_.toInt).toSeq\n    println(inputs.mkString(","))\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=input",title:"input"},"1\n2\n3\n4\n")),(0,r.kt)("p",null,"and run them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli https://gist.github.com/lwronski/7ee12fa4b8b8bac3211841273df82080\n# 1,2,3,4\n")),(0,r.kt)("p",null,"it will print ",(0,r.kt)("inlineCode",{parentName:"p"},"1,2,3,4")," to the standard output."))}m.isMDXComponent=!0}}]);