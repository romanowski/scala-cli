"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9557],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=i,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(f,o(o({ref:n},p),{},{components:t})):a.createElement(f,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3820:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var a=t(3117),i=t(102),r=(t(7294),t(3905)),o=["components"],l={title:"Configuration",sidebar_position:9},c=void 0,s={unversionedId:"guides/configuration",id:"guides/configuration",title:"Configuration",description:"scala-cli can be configured in two ways:",source:"@site/docs/guides/configuration.md",sourceDirName:"guides",slug:"/guides/configuration",permalink:"/scala-cli/docs/guides/configuration",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/guides/configuration.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Configuration",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/scala-cli/docs/guides/intro"},next:{title:"Managing dependencies",permalink:"/scala-cli/docs/guides/dependencies"}},p={},d=[{value:"Command-line",id:"command-line",level:2},{value:"In .scala and .sc files",id:"in-scala-and-sc-files",level:2},{value:"Using directives",id:"using-directives",level:3},{value:"Special imports",id:"special-imports",level:3}],u={toc:d};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," can be configured in two ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on the command-line"),(0,r.kt)("li",{parentName:"ul"},"directly in ",(0,r.kt)("inlineCode",{parentName:"li"},".scala")," and ",(0,r.kt)("inlineCode",{parentName:"li"},".sc")," files")),(0,r.kt)("p",null,"Parameters on the command line take precedence over parameters in sources.\nThat way, you can quickly override parameters from the command line."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The configuration options and syntax in ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," (and ",(0,r.kt)("inlineCode",{parentName:"p"},".sc"),") files is likely to evolve in the future.")),(0,r.kt)("h2",{id:"command-line"},"Command-line"),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," to any sub-command of ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," to list its options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --help\nscala-cli package --help\n")),(0,r.kt)("p",null,"As an example of command line configuration, one thing you can do with ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," command line options is to specify the Scala version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --scala 3.0.0 Test.scala\n")),(0,r.kt)("p",null,"Another thing you can do is to specify dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --dependency org.typelevel::cats-core:2.3.0 Test.scala\n")),(0,r.kt)("p",null,"The reference documentation lists ",(0,r.kt)("a",{parentName:"p",href:"/scala-cli/docs/reference/cli-options"},"all of the available options"),"."),(0,r.kt)("h2",{id:"in-scala-and-sc-files"},"In .scala and .sc files"),(0,r.kt)("p",null,"Configuration information can also be put in ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".sc")," files using special imports, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"using")," directive."),(0,r.kt)("h3",{id:"using-directives"},"Using directives"),(0,r.kt)("p",null,"Scala CLI can be configured inside ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," files.\nThis is achieved by specifying ",(0,r.kt)("inlineCode",{parentName:"p"},"using")," directives inside comments at the top of a ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," file, before any ",(0,r.kt)("inlineCode",{parentName:"p"},"package")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"import")," statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//> using scala "2.13"\n//> using platform "scala-js"\n//> using options "-Xasync"\n\n// package and import statements follow here ...\n')),(0,r.kt)("p",null,"The reference documentation lists ",(0,r.kt)("a",{parentName:"p",href:"/scala-cli/docs/reference/directives#using-directives"},"all available using directives"),"."),(0,r.kt)("h3",{id:"special-imports"},"Special imports"),(0,r.kt)("p",null,"Dependencies can be added right from ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".sc")," files, using the same\nsyntax as Ammonite and Metals worksheets:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import $dep.`com.lihaoyi::upickle:1.4.0`\nimport $ivy.`com.lihaoyi::pprint:0.6.6`\nimport ujson._\n")),(0,r.kt)("p",null,"Both ",(0,r.kt)("inlineCode",{parentName:"p"},"import $ivy")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"import $dep")," are accepted, and are equivalent. Note that this syntax\nmight be deprecated - and then removed - in the future. It's recommended to add dependencies\nwith ",(0,r.kt)("a",{parentName:"p",href:"#using-directives"},(0,r.kt)("inlineCode",{parentName:"a"},"using")," directives"),"."))}m.isMDXComponent=!0}}]);