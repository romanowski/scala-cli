"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[135],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return t?a.createElement(g,r(r({ref:n},s),{},{components:t})):a.createElement(g,r({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=u;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3390:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var a=t(3117),i=t(102),l=(t(7294),t(3905)),r=["components"],o={title:"Managing dependencies",sidebar_position:9},c="Managing dependencies",p={unversionedId:"guides/dependencies",id:"guides/dependencies",title:"Managing dependencies",description:"Dependency syntax",source:"@site/docs/guides/dependencies.md",sourceDirName:"guides",slug:"/guides/dependencies",permalink:"/scala-cli/docs/guides/dependencies",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/guides/dependencies.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Managing dependencies",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/scala-cli/docs/guides/configuration"},next:{title:"IDE support",permalink:"/scala-cli/docs/guides/ide"}},s={},d=[{value:"Dependency syntax",id:"dependency-syntax",level:2},{value:"Specifying dependencies from the command line",id:"specifying-dependencies-from-the-command-line",level:2},{value:"Updating dependencies",id:"updating-dependencies",level:2}],u={toc:d};function m(e){var n=e.components,t=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"managing-dependencies"},"Managing dependencies"),(0,l.kt)("h2",{id:"dependency-syntax"},"Dependency syntax"),(0,l.kt)("p",null,"Dependencies are declared in Scala CLI according to the following format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"groupID:artifactID:revision\n")),(0,l.kt)("p",null,"This is similar to how you declare dependencies in SBT with the ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," character.\nFor example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.scala-lang.modules:scala-parallel-collections_2.13:1.0.4\n")),(0,l.kt)("p",null,"You can also skip explicitly stating the Scala version in the artifact name by repeating the ",(0,l.kt)("inlineCode",{parentName:"p"},":")," character after\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"groupID")," (similarly to how you can do the same with ",(0,l.kt)("inlineCode",{parentName:"p"},"%%")," in SBT). This is just a shortcut, Scala CLI will still add\nthe Scala version for you when fetching the dependency. Also, this only applies to Scala dependencies."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.scala-lang.modules::scala-parallel-collections:1.0.4\n")),(0,l.kt)("p",null,"Java and other non-scala dependencies follow the same syntax (without the ",(0,l.kt)("inlineCode",{parentName:"p"},"::")," for implicit Scala version, of course).\nFor example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.postgresql:postgresql:42.2.8\n")),(0,l.kt)("h2",{id:"specifying-dependencies-from-the-command-line"},"Specifying dependencies from the command line"),(0,l.kt)("p",null,"You can add dependencies on the command line, with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," option:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli compile Hello.scala \\\n  --dependency org.scala-lang.modules::scala-parallel-collections:1.0.4\n")),(0,l.kt)("p",null,"You can also add a URL fallback for a JAR dependency, if it can't be fetched otherwise:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'scala-cli compile Hello.scala \\\n  -- dependency "org::name::version,url=https://url-to-the-jar"\n')),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," is only meant as a convenience. You should favor adding dependencies in the sources themselves\nvia ",(0,l.kt)("a",{parentName:"p",href:"/scala-cli/docs/guides/configuration#special-imports"},"using directives"),". However, the ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," CLI option takes\nprecedence over ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directives, so it can be used to override a ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directive, such as when you want to work\nwith a different dependency version."),(0,l.kt)("p",null,"You can also add repositories on the command-line, via ",(0,l.kt)("inlineCode",{parentName:"p"},"--repository"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli compile Hello.scala \\\n  --dependency com.pany::util:33.1.0 --repo https://artifacts.pany.com/maven\n")),(0,l.kt)("p",null,"Lastly, you can also add simple JAR files as dependencies with ",(0,l.kt)("inlineCode",{parentName:"p"},"--jar"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli compile Hello.scala --jar /path/to/library.jar\n")),(0,l.kt)("h2",{id:"updating-dependencies"},"Updating dependencies"),(0,l.kt)("p",null,"To check if dependencies in using directives are up-to-date, use ",(0,l.kt)("inlineCode",{parentName:"p"},"dependency-update")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Hello.scala",title:"Hello.scala"},'//> using lib "com.lihaoyi::os-lib:0.7.8"\n//> using lib "com.lihaoyi::utest:0.7.10"\nimport $ivy.`com.lihaoyi::geny:0.6.5`\nimport $dep.`com.lihaoyi::pprint:0.6.6`\n\nobject Hello extends App {\n  println("Hello World")\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli dependency-update Hello.scala\n# Updates\n#    * com.lihaoyi::os-lib:0.7.8 -> 0.8.1\n#    * com.lihaoyi::utest:0.7.10 -> 0.8.0\n#    * com.lihaoyi::geny:0.6.5 -> 0.7.1\n#    * com.lihaoyi::pprint:0.6.6 -> 0.7.3\n# To update all dependencies run: \n#     scala-cli dependency-update --all\n")),(0,l.kt)("p",null,"Passing ",(0,l.kt)("inlineCode",{parentName:"p"},"--all")," to the ",(0,l.kt)("inlineCode",{parentName:"p"},"dependency-update")," sub-command updates all dependencies in your sources."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli dependency-update Hello.scala --all\n# Updated dependency to: com.lihaoyi::os-lib:0.8.1\n# Updated dependency to: com.lihaoyi::utest:0.8.0\n# Updated dependency to: com.lihaoyi::geny:0.7.1\n# Updated dependency to: com.lihaoyi::pprint:0.7.3\n")))}m.isMDXComponent=!0}}]);